;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; Theory of Arrays
;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; depends on : th_base.plf

; sorts

			

(declare Array (! s1 sort (! s2 sort sort)))	; s1 is index, s2 is element




; functions
(declare write (! s1 sort
               (! s2 sort
                 (term (arrow (Array s1 s2)
                       (arrow s1
                       (arrow s2 (Array s1 s2))))))))

(declare read (! s1 sort
              (! s2 sort
              	(term (arrow (Array s1 s2)
               	      (arrow s1 s2))))))

; inference rules


(declare stam (! s sort
			  (! t (term s)
				(term s))))

(declare stam-arr (! s sort
				  (term (arrow s s))))

;(declare epsilon (! s sort
;				 (! t (term s)
;				 (! f formula 
;					(term s)))))




;(declare exteps (! s1 sort
;				(! s2 sort 
;				(! t1 (term (Array s1 s2))
;				(! t2 (term (Array s1 s2))
;				(! x (term s1)
;				(! u1 (th_holds (not (= _ t1 t2)))
;				(@ rt1 (apply _ _ (read s1 s2) t1)
;				(@ rt2 (apply _ _ (read s1 s2) t2)
;				(th_holds 
;					(not (= _ (apply _ _ rt1 (epsilon s1 x (not (= _ (apply _ _ rt1 x) (apply _ _ rt2 x))))) (apply _ _ rt2 (epsilon s1 x (not (= _ (apply _ _ rt1 x) (apply _ _ rt2 x))))))))))))))))))
;

	
(declare ext2 (! s1 sort
			  (! s2 sort
			  (! t1 (term (Array s1 s2))
			  (! t2 (term (Array s1 s2))
			  (! k (term s1)
			  (! u1 (th_holds (not (= _ (apply _ _ (apply _ _ (read s1 s2) t1) k) (apply _ _ (apply _ _ (read s1 s2) t2) k))))
			  (th_holds 
				(not (= _ t1 t2))))))))))	

; read( a[i] = b, i ) == b
(declare row1 (! s1 sort
              (! s2 sort
              (! t1 (term (Array s1 s2))
              (! t2 (term s1)
              (! t3 (term s2)
              	(th_holds (= _
		(apply _ _ (apply _ _ (read s1 s2) (apply _ _ (apply _ _ (apply _ _ (write s1 s2) t1) t2) t3)) t2) t3))))))))

; read( a[i] = b, j ) == read( a, j ) if i != j
(declare row (! s1 sort
             (! s2 sort
             (! t2 (term s1)
             (! t3 (term s1)
             (! t1 (term (Array s1 s2))
             (! t4 (term s2)
             (! u (th_holds (not (= _ t2 t3)))
               (th_holds (= _ (apply _ _ (apply _ _ (read s1 s2) (apply _ _ (apply _ _ (apply _ _ (write s1 s2) t1) t2) t4)) t3)
               		      (apply _ _ (apply _ _ (read s1 s2) t1) t3)))))))))))

; i == j if read( a, j ) != read( a[i] = b, j )
(declare negativerow (! s1 sort
                     (! s2 sort
                     (! t2 (term s1)
                     (! t3 (term s1)
                     (! t1 (term (Array s1 s2))
                     (! t4 (term s2)
		     (! u (th_holds (not (= _
                        (apply _ _ (apply _ _ (read s1 s2) (apply _ _ (apply _ _ (apply _ _ (write s1 s2) t1) t2) t4)) t3)
                        (apply _ _ (apply _ _ (read s1 s2) t1) t3))))
                     (th_holds (= _ t2 t3))))))))))

(declare ext (! s1 sort
             (! s2 sort
             (! t1 (term (Array s1 s2))
             (! t2 (term (Array s1 s2))
             (! u1 (! k (term s1)
                   (! u2 (th_holds (or (= _ t1 t2) (not (= _ (apply _ _ (apply _ _ (read s1 s2) t1) k) (apply _ _ (apply _ _ (read s1 s2) t2) k)))))
                     (holds cln)))
               (holds cln)))))))



(declare ext_eps_term (! s1 sort 
                      (! s2 sort 
                        (term (arrow (Array s1 s2) (arrow (Array s1 s2) s1))))))


(declare ext_eps_rule (! s1 sort
                      (! s2 sort
                      (! t1 (term (Array s1 s2))
                      (! t2 (term (Array s1 s2))
                      (! u1 (! u2 (th_holds (or (= _ t1 t2) (not (= _ (apply _ _ (apply _ _ (read s1 s2) t1) (apply _ _ (apply _ _ (ext_eps_term s1 s2) t1) t2)) (apply _ _ (apply _ _ (read s1 s2) t2)   (apply _ _ (apply _ _ (ext_eps_term s1 s2) t1) t2)   ))))) (holds cln)) (holds cln)))))))


;as similar as possible to the original "ext", but with epsilon
;(declare ext-eps-cln (! s1 sort
;				(! s2 sort 
;				(! t1 (term (Array s1 s2))
;				(! t2 (term (Array s1 s2))
;		;		(! x (term s1)
;				(! u1 (! u2 (th_holds (or (= _ t1 t2) (not (= _ (apply _ _ (apply _ _ (read s1 s2) t1) (epsilon s1 x (not (= _ (apply _ _ (apply _ _ (read s1 s2) t1) x) (apply _ _ (apply _ _ (read s1 s2) t2) x))))) (apply _ _ (apply _ _ (read s1 s2) t2) (epsilon s1 x (not (= _ (apply _ _ (apply _ _ (read s1 s2) t1) x) (apply _ _ (apply _ _ (read s1 s2) t2) x))))))))) (holds cln))
;					(holds cln)))))))
;;)


